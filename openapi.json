{
  "swagger": "2.0",
  "info": {
    "description": "A simple token generator service with customizable token based on params",
    "version": "1.0",
    "title": "Token Generator Solution",
    "termsOfService": "Terms of service",
    "contact": {
      "name": "Pratik Shukla",
      "url": "http://me.pratiks.net",
      "email": "pratiks@pratiks.net"
    },
    "license": {
      "name": "Apache License Version 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "host": "localhost:8080",
  "basePath": "/",
  "tags": [
    {
      "name": "token-controller",
      "description": "Token Controller"
    }
  ],
  "paths": {
    "/api/tokenservice/issueToken": {
      "post": {
        "tags": [
          "token-controller"
        ],
        "summary": "generateToken",
        "operationId": "generateTokenUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TokenRequestModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/tokenservice/reissueToken": {
      "post": {
        "tags": [
          "token-controller"
        ],
        "summary": "reissue",
        "operationId": "reissueUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TokenRequestModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/tokenservice/validateToken": {
      "post": {
        "tags": [
          "token-controller"
        ],
        "summary": "validateoken",
        "operationId": "validateokenUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TokenRequestModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "definitions": {
    "TokenRequestModel": {
      "type": "object",
      "properties": {
        "alphanumeric": {
          "type": "boolean"
        },
        "channel": {
          "type": "string"
        },
        "customerId": {
          "type": "string"
        },
        "expiresIn": {
          "type": "integer",
          "format": "int32"
        },
        "isAlphanumeric": {
          "type": "boolean"
        },
        "length": {
          "type": "integer",
          "format": "int32"
        },
        "token": {
          "type": "string"
        }
      }
    }
  }
}